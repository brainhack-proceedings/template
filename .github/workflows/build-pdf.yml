name: Report
on:
  push:
    branches:
      - main 
env:
 PUB_NAME: ${{ github.event.repository.name }}
jobs:
  updateInfo:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'Initial commit')"    
    steps:
      - name: Checkout this (user) repository
        uses: actions/checkout@v2
      - name: Get current date
        run: echo "DATE=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
      - name: Update MD front-matter
        run: |
         sed -i "/^report_url:.*/c\report_url: https://github.com/$GITHUB_REPOSITORY" report.md
         sed -i "/^last_changed:.*/c\last_changed: $DATE UTC" report.md
         sed -i "/^auth_created:.*/c\auth_created: ${{ github.actor }}" report.md
         git config --local user.email "noreply@bhproceedings.com"
         git config --local user.name "BHBOT"
         git add report.md
         git commit -m "[UPDATE] ðŸ¤– MD metadata" -a
      - name: Push metadata
        uses: ad-m/github-push-action@master
        with:
         branch: main
         force: true
         github_token: ${{ secrets.PAT_BHP }}
  
  buildPDF:
    runs-on: ubuntu-latest
    needs: updateInfo
    if: "!contains(github.event.head_commit.message, 'Initial commit')"
    container:
      image: agahkarakuzu/bhproceedings@sha256:bfc1b7f3b714b12e04a6a6ef1f440e9f19997ac1bfecc2187f2476cf47c22ab3

    steps:
     - name: Checkout this (user) repository
       uses: actions/checkout@v2
     - name: Checkout web-source repository
       uses: actions/checkout@v2
       with:
         token: ${{ secrets.PAT_BHP }}
         repository: brainhack-proceedings/template-web
         path: tmp-web
     - name: Compile PDF
       run: |
        rm -rf /tmp-web/.git
        cp -a tmp-web/. .
        rm -rf tmp-web 
        mkdir -p data
        [ -e data/report.json ] && rm data/report.json
        [ -e data/ghdetails.json ] && rm data/ghdetails.json
        m2j report.md >> data/report.json
        cat <<EOF > data/ghdetails.json
        {"pub_name" : "${{env.PUB_NAME}}","repo":"$GITHUB_REPOSITORY"}
        EOF
        pandoc -s -N --template ./latex/brainhack-report-template.tex report.md -o ./latex/brainhack-${{env.PUB_NAME}}.tex
        pandoc -s -N --template ./latex/brainhack-html-template.tex report.md -o ./latex/brainhack-${{env.PUB_NAME}}-html.tex
        cd latex
        pdflatex brainhack-${{env.PUB_NAME}}.tex
        bibtex brainhack-${{env.PUB_NAME}}
        pdflatex brainhack-${{env.PUB_NAME}}.tex
        pdflatex brainhack-${{env.PUB_NAME}}.tex
        pandoc brainhack-${{env.PUB_NAME}}-html.tex -c ./css/figures.css -f latex -t html -s -o report.html --bibliography ../report.bib --mathjax=https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML -H ./mathjax-header-include.txt
        cp report.html ../layouts/partials/report.html
        mkdir -p ../static/pdf
        cp brainhack-${{env.PUB_NAME}}.pdf ../static/pdf/brainhack-${{env.PUB_NAME}}.pdf
     - uses: actions/upload-artifact@v2
       with:
         name: PDF Report ${{env.PUB_NAME}}
         path: static/pdf/brainhack-${{env.PUB_NAME}}.pdf
     - uses: actions/upload-artifact@v2
       with:
         name: HTML Report ${{env.PUB_NAME}}
         path: layouts/partials/report.html
     - uses: actions/upload-artifact@v2
       with:
         name: JSON Report ${{env.PUB_NAME}}
         path: data/report.json
     - uses: actions/upload-artifact@v2
       with:
         name: JSON GitHub ${{env.PUB_NAME}}
         path: data/ghdetails.json
     - uses: actions/upload-artifact@v2
       with:
         name: Latex interm ${{env.PUB_NAME}}
         path: latex/brainhack-${{env.PUB_NAME}}-html.tex
  buildHugo:
   runs-on: ubuntu-latest
   if: "!contains(github.event.head_commit.message, 'Initial commit')"
   needs: buildPDF
   steps:  
     - name: Checkout this (user) repository
       uses: actions/checkout@v2
     - name: Checkout web-source repository
       uses: actions/checkout@v2
       with:
         token: ${{ secrets.PAT_BHP }}
         repository: brainhack-proceedings/template-web
         path: tmp-web
         submodules: true
     - name: Checkout web-page content
       run: |
        ls
        ls tmp-web 
        rm -rf tmp-web/.git
        cp -a tmp-web/. .
        rm -rf tmp-web 
        mkdir -p static/pdf
        mkdir -p static/css
        mkdir -p static/img
        mkdir -p data 
        cp figures/figures.css static/css/figures.css
        cp -a figures/. static/
        rm static/figures.css
     - uses: actions/download-artifact@master
       with:
         name: PDF Report ${{env.PUB_NAME}}
         path: static/pdf
     - uses: actions/download-artifact@master
       with:
         name: HTML Report ${{env.PUB_NAME}}
         path: layouts/partials
     - uses: actions/download-artifact@master
       with:
         name: JSON Report ${{env.PUB_NAME}}
         path: data
     - uses: actions/download-artifact@master
       with:
         name: JSON GitHub ${{env.PUB_NAME}}
         path: data
     - name: Push changes
       uses: ad-m/github-push-action@master
       with:
        branch: main
        force: true
        github_token: ${{ secrets.PAT_BHP }}   
     - name: Setup Hugo
       uses: peaceiris/actions-hugo@v2
       with:
         hugo-version: '0.71.1'
     - name: Build
       run: hugo --minify
       env:
          HUGO_PARAMS_github: ${{github.workspace}}
     - name: Deploy
       uses: peaceiris/actions-gh-pages@v3
       with:
         github_token: ${{ secrets.PAT_BHP }}
         publish_dir: ./public
